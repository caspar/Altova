<?xml version="1.0" encoding="UTF-8"?><structure version="7" xsltversion="1" cssmode="strict" relativeto="*SPS" encodinghtml="UTF-8" encodingrtf="ISO-8859-1" encodingpdf="UTF-8" embed-images="1">	<parameters/>	<schemasources>		<namespaces/>		<schemasources>			<xsdschemasource name="$XML" main="1" schemafile="Data.xsd" workingxmlfile="Data.xml">				<xmltablesupport/>				<textstateicons/>			</xsdschemasource>		</schemasources>	</schemasources>	<modules/>	<flags>		<scripts/>		<globalparts/>		<designfragments/>		<pagelayouts/>	</flags>	<scripts>		<script language="javascript"/>	</scripts>	<globalstyles>		<rules selector=".info">			<media>				<media value="all"/>			</media>			<rule background-color="#f6f6ff" border="1px solid navy" color="navy" font-weight="bold" margin-bottom="12px" margin-top="12px" padding="2px"/>		</rules>		<rules selector=".explanation">			<media>				<media value="all"/>			</media>			<rule color="blue" font-style="italic" margin-bottom="12px"/>		</rules>	</globalstyles>	<mainparts>		<children>			<globaltemplate match="/" matchtype="named" parttype="main">				<children>					<paragraph paragraphtag="h2">						<styles border-bottom="2px solid navy" color="navy"/>						<children>							<text fixtext="Example: Templates - sorting"/>						</children>					</paragraph>					<paragraph paragraphtag="p">						<properties class="info"/>						<children>							<text fixtext="This example demonstrates how you can have StyleVision generate XSLT code to sort the entries that are iterated over with a template. Note that sorting is not applied in Authentic."/>						</children>					</paragraph>					<template match="$XML" matchtype="schemasource">						<editorproperties elementstodisplay="5"/>						<children>							<template match="data" matchtype="schemagraphitem">								<editorproperties elementstodisplay="5"/>								<children>									<template match="strings" matchtype="schemagraphitem">										<editorproperties elementstodisplay="5"/>										<children>											<paragraph paragraphtag="p">												<properties class="explanation"/>												<children>													<text fixtext="For reference, all entries of the &apos;string&apos; element, as they appear in the XML:"/>												</children>											</paragraph>											<template match="string" matchtype="schemagraphitem">												<editorproperties elementstodisplay="5"/>												<children>													<content>														<format datatype="string"/>													</content>													<newline/>												</children>											</template>											<newline/>											<paragraph paragraphtag="p">												<properties class="explanation"/>												<children>													<text fixtext="Below we list the same strings, but sorted in various ways. To see how the sorting is defined, right click on the template markup and choose &quot;Sort by...&quot; from the context menu."/>												</children>											</paragraph>											<paragraph paragraphtag="p">												<properties class="explanation"/>												<children>													<text fixtext="1.) All entries of the &apos;string&apos; element, sorted alphabetically:"/>												</children>											</paragraph>											<template match="string" matchtype="schemagraphitem">												<editorproperties elementstodisplay="5"/>												<children>													<content>														<format datatype="string"/>													</content>													<newline/>												</children>												<sort>													<key match="."/>												</sort>											</template>											<paragraph paragraphtag="p">												<properties class="explanation"/>												<children>													<text fixtext="2.) All entries of the &apos;string&apos; element, sorted by string length:"/>												</children>											</paragraph>											<template match="string" matchtype="schemagraphitem">												<editorproperties elementstodisplay="5"/>												<children>													<content>														<format datatype="string"/>													</content>													<newline/>												</children>												<sort>													<key match="string-length()"/>												</sort>											</template>											<line/>										</children>									</template>								</children>							</template>						</children>					</template>				</children>			</globaltemplate>		</children>	</mainparts>	<globalparts/>	<pagelayout/>	<designfragments/></structure>
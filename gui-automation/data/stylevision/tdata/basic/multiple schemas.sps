<?xml version="1.0" encoding="UTF-8"?><structure version="7" cssmode="strict" relativeto="*SPS" encodinghtml="UTF-8" encodingrtf="ISO-8859-1" encodingpdf="UTF-8" embed-images="1">	<parameters/>	<schemasources>		<namespaces>			<nspair prefix="f" uri="http://www.xmlspy.com/schemas/formatting"/>		</namespaces>		<schemasources>			<xsdschemasource name="$DATA" schemafile="Data.xsd" workingxmlfile="Data.xml">				<xmltablesupport/>				<textstateicons/>			</xsdschemasource>			<xsdschemasource name="$BOOKS" main="1" schemafile="Book.xsd" workingxmlfile="Book.xml">				<xmltablesupport/>				<textstateicons/>			</xsdschemasource>		</schemasources>	</schemasources>	<modules/>	<flags>		<scripts/>		<globalparts/>		<designfragments/>		<pagelayouts/>	</flags>	<scripts>		<script language="javascript"/>	</scripts>	<globalstyles>		<rules selector=".info">			<media>				<media value="all"/>			</media>			<rule background-color="#f6f6ff" border="1px solid navy" color="navy" font-weight="bold" margin-bottom="12px" margin-top="12px" padding="2px"/>		</rules>		<rules selector=".explanation">			<media>				<media value="all"/>			</media>			<rule color="blue" font-style="italic" margin-bottom="12px"/>		</rules>	</globalstyles>	<mainparts>		<children>			<globaltemplate match="/" matchtype="named" parttype="main">				<children>					<paragraph paragraphtag="h2">						<styles border-bottom="2px solid navy" color="navy"/>						<children>							<text fixtext="Example: Multiple Schemas"/>						</children>					</paragraph>					<paragraph paragraphtag="p">						<properties class="info"/>						<children>							<text fixtext="In StyleVision Enterprise Edition you can use multiple sources of data to create your designs. You can use those additional sources (be they XML or DB based) to display additional information to your user, or in the form of external data lookup."/>						</children>					</paragraph>					<paragraph paragraphtag="p">						<properties class="explanation"/>						<children>							<text fixtext="A common idiom in this case is to show possible values that are retrieved from a secondary source inside a combo box. The user of your form is then restricted to only use those values that are specified there."/>						</children>					</paragraph>					<paragraph paragraphtag="p">						<properties class="explanation"/>						<children>							<text fixtext="In the below (very simple) example, the user will edit &quot;Books.xml&quot;, the XML file for our main source $BOOKS. In order to keep the example sort, we only show the &apos;@volumes&apos; attribute, for which we define a lookup into our secondary source $DATA. Even though &apos;@volumes&apos; has type xs:string, the user will thus be restricted to only use the values defined in &quot;Data.xml&quot;, the XML file of our lookup source."/>						</children>					</paragraph>					<template match="$BOOKS" matchtype="schemasource">						<editorproperties elementstodisplay="5"/>						<children>							<template match="book" matchtype="schemagraphitem">								<editorproperties elementstodisplay="5"/>								<children>									<template match="@volumes" matchtype="schemagraphitem">										<editorproperties elementstodisplay="5"/>										<children>											<text fixtext="Enter the number of volumes: "/>											<combobox xpath="$DATA/data/strings/string">												<styles width="200px"/>												<children>													<content>														<format datatype="string"/>													</content>												</children>											</combobox>										</children>									</template>								</children>							</template>						</children>					</template>					<paragraph paragraphtag="p">						<properties class="explanation"/>						<children>							<text fixtext="For reference, the list of values that are being referenced:"/>						</children>					</paragraph>					<template match="$DATA" matchtype="schemasource">						<editorproperties elementstodisplay="5"/>						<children>							<template match="data" matchtype="schemagraphitem">								<editorproperties elementstodisplay="5"/>								<children>									<template match="strings" matchtype="schemagraphitem">										<editorproperties elementstodisplay="5"/>										<children>											<template match="string" matchtype="schemagraphitem">												<editorproperties elementstodisplay="5"/>												<children>													<content>														<format datatype="string"/>													</content>													<newline/>												</children>											</template>										</children>									</template>								</children>							</template>						</children>					</template>				</children>			</globaltemplate>		</children>	</mainparts>	<globalparts/>	<pagelayout/>	<designfragments/></structure>
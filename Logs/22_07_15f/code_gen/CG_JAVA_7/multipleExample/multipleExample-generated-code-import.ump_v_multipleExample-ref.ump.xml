<?xml version="1.0" encoding="UTF-8"?>
<!-- Differencing export generated by Altova® DiffDog® version 2015 sp2 (x64) Enterprise Edition - for more information please visit www.altova.com -->
<diff_result>
	<diff_info comparison_mode="xml">
		<source_left name="C:\work\umodel\regression-tests\logs\22_07_15\code_gen\CG_JAVA_7\multipleExample\final1multipleExample-generated-code-import.ump" uri="file:///C:/work/umodel/regression-tests/logs/22_07_15/code_gen/CG_JAVA_7/multipleExample/final1multipleExample-generated-code-import.ump"/>
		<source_right name="C:\work\umodel\regression-tests\logs\22_07_15\code_gen\CG_JAVA_7\multipleExample\final2multipleExample-ref.ump" uri="file:///C:/work/umodel/regression-tests/logs/22_07_15/code_gen/CG_JAVA_7/multipleExample/final2multipleExample-ref.ump"/>
	</diff_info>
	<xml_diff>
		<left_location>
			<parent xpath="/UModel/Model/Package/packagedElement/Package[3]/packagedElement"/>
			<position>2</position>
		</left_location>
		<right_location>
			<parent xpath="/UModel/Model/Package/packagedElement/Package[3]/packagedElement"/>
			<position>2</position>
		</right_location>
		<right_content>
			<element>
				<Dependency uuid="Root.multipleExample" visibility="public">
					<client idref="Root.multipleExample"/>
					<supplier idref="Root.Java Profile"/>
				</Dependency>
				<Dependency uuid="Root.multipleExample" visibility="public">
					<client idref="Root.multipleExample"/>
					<supplier idref="Root.Unknown Externals"/>
				</Dependency>
				<Interaction name="getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String" visibility="public">
					<fragment>
						<BehaviorExecutionSpecification start="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String"/>
						<BehaviorExecutionSpecification start="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String"/>
						<BehaviorExecutionSpecification start="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String"/>
						<CombinedFragment interactionOperator="opt" name="CombinedFragment1" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1">
							<operand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" value="&quot;Monday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" value="&quot;Tuesday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" value="&quot;Wednesday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" value="&quot;Thursday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" value="&quot;Friday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" value="&quot;Saturday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" value="&quot;Sunday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.CombinedFragment1.InteractionOperand" value="default" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
							</operand>
						</CombinedFragment>
						<MessageOccurrenceSpecification uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String"/>
						<MessageOccurrenceSpecification uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String"/>
						<MessageOccurrenceSpecification uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String"/>
						<MessageOccurrenceSpecification uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String"/>
					</fragment>
					<lifeline>
						<Lifeline name="Lifeline1" represents="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.a" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.Lifeline1">
							<coveredBy idref="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String"/>
							<coveredBy idref="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String"/>
						</Lifeline>
						<Lifeline name="new IllegalArgumentException(&quot;Invalid day of the week: &quot; + dayOfWeekArg)" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.new IllegalArgumentException(&quot;Invalid day of the week: &quot; + dayOfWeekArg)">
							<coveredBy idref="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String"/>
							<coveredBy idref="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String"/>
						</Lifeline>
					</lifeline>
					<message>
						<Message ignoreForCodeEngineering="true" messageSort="createMessage" name="new IllegalArgumentException(&quot;Invalid day of the week: &quot; + dayOfWeekArg)" receiveEvent="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String" sendEvent="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.new IllegalArgumentException(&quot;Invalid day of the week: &quot; + dayOfWeekArg)"/>
						<Message messageSort="reply" receiveEvent="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String" sendEvent="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String"/>
					</message>
					<ownedAttribute>
						<Property name="a" type="Root.multipleExample.multipleExample" uuid="Root.multipleExample.getTypeOfDayWithSwitchStatement(in dayOfWeekArg:String):String.a"/>
					</ownedAttribute>
				</Interaction>
				<Interaction name="multipleExample():void" uuid="Root.multipleExample.multipleExample():void" visibility="public">
					<fragment>
						<BehaviorExecutionSpecification start="Root.multipleExample.multipleExample():void" uuid="Root.multipleExample.multipleExample():void"/>
						<BehaviorExecutionSpecification start="Root.multipleExample.multipleExample():void" uuid="Root.multipleExample.multipleExample():void"/>
						<BehaviorExecutionSpecification start="Root.multipleExample.multipleExample():void" uuid="Root.multipleExample.multipleExample():void"/>
						<BehaviorExecutionSpecification start="Root.multipleExample.multipleExample():void" uuid="Root.multipleExample.multipleExample():void"/>
						<BehaviorExecutionSpecification start="Root.multipleExample.multipleExample():void" uuid="Root.multipleExample.multipleExample():void"/>
						<CombinedFragment interactionOperator="strict" name="CombinedFragment1" uuid="Root.multipleExample.multipleExample():void.CombinedFragment1">
							<operand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.multipleExample():void.CombinedFragment1.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.multipleExample():void.CombinedFragment1.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.multipleExample():void.CombinedFragment1.InteractionOperand" value="try" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.multipleExample():void.CombinedFragment1.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.multipleExample():void.CombinedFragment1.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.multipleExample():void.CombinedFragment1.InteractionOperand" value="catch IndexOutOfBoundsException | NullPointerException np" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
							</operand>
						</CombinedFragment>
						<CombinedFragment interactionOperator="opt" name="CombinedFragment2" uuid="Root.multipleExample.multipleExample():void.CombinedFragment2">
							<operand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" value="&quot;Monday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" value="&quot;Tuesday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" value="&quot;Wednesday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" value="&quot;Thursday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" value="&quot;Friday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" value="&quot;Saturday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" value="&quot;Sunday&quot;" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
								<InteractionOperand name="InteractionOperand" uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand">
									<guard>
										<InteractionConstraint uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" visibility="public">
											<specification>
												<LiteralString uuid="Root.multipleExample.multipleExample():void.CombinedFragment2.InteractionOperand" value="default" visibility="public"/>
											</specification>
										</InteractionConstraint>
									</guard>
								</InteractionOperand>
							</operand>
						</CombinedFragment>
						<MessageOccurrenceSpecification uuid="Root.multipleExample.multipleExample():void"/>
						<MessageOccurrenceSpecification uuid="Root.multipleExample.multipleExample():void"/>
						<MessageOccurrenceSpecification uuid="Root.multipleExample.multipleExample():void"/>
						<MessageOccurrenceSpecification uuid="Root.multipleExample.multipleExample():void"/>
						<MessageOccurrenceSpecification uuid="Root.multipleExample.multipleExample():void"/>
						<MessageOccurrenceSpecification uuid="Root.multipleExample.multipleExample():void"/>
					</fragment>
					<lifeline>
						<Lifeline name="new IllegalArgumentException(&quot;Invalid day of the week: &quot; + dayOfWeekArg)" uuid="Root.multipleExample.multipleExample():void.new IllegalArgumentException(&quot;Invalid day of the week: &quot; + dayOfWeekArg)">
							<coveredBy idref="Root.multipleExample.multipleExample():void"/>
							<coveredBy idref="Root.multipleExample.multipleExample():void"/>
						</Lifeline>
						<Lifeline name="Lifeline1" represents="Root.multipleExample.multipleExample():void.a" uuid="Root.multipleExample.multipleExample():void.Lifeline1">
							<coveredBy idref="Root.multipleExample.multipleExample():void"/>
							<coveredBy idref="Root.multipleExample.multipleExample():void"/>
							<coveredBy idref="Root.multipleExample.multipleExample():void"/>
							<coveredBy idref="Root.multipleExample.multipleExample():void"/>
						</Lifeline>
					</lifeline>
					<message>
						<Message messageSort="createMessage" name="new IllegalArgumentException(&quot;Invalid day of the week: &quot; + dayOfWeekArg)" receiveEvent="Root.multipleExample.multipleExample():void" sendEvent="Root.multipleExample.multipleExample():void" uuid="Root.multipleExample.multipleExample():void.new IllegalArgumentException(&quot;Invalid day of the week: &quot; + dayOfWeekArg)"/>
						<Message messageSort="reply" receiveEvent="Root.multipleExample.multipleExample():void" sendEvent="Root.multipleExample.multipleExample():void" uuid="Root.multipleExample.multipleExample():void"/>
						<Message ignoreForCodeEngineering="true" receiveEvent="Root.multipleExample.multipleExample():void" sendEvent="Root.multipleExample.multipleExample():void" signature="Root.multipleExample.multipleExample.getTypeOfDayWithSwitchStatement" uuid="Root.multipleExample.multipleExample():void">
							<argument>
								<LiteralString uuid="Root.multipleExample.multipleExample():void" value="&quot;Sunday&quot;" visibility="public"/>
							</argument>
						</Message>
					</message>
					<ownedAttribute>
						<Property name="a" type="Root.multipleExample.multipleExample" uuid="Root.multipleExample.multipleExample():void.a"/>
					</ownedAttribute>
				</Interaction>
			</element>
		</right_content>
	</xml_diff>
	<xml_diff>
		<left_location>
			<parent xpath="/UModel/ModelHistory/Package/packagedElement/Profile/packagedElement/Enumeration/ownedLiteral"/>
			<position>3</position>
		</left_location>
		<right_location>
			<parent xpath="/UModel/ModelHistory/Package/packagedElement/Profile/packagedElement/Enumeration/ownedLiteral"/>
			<position>3</position>
		</right_location>
		<left_content>
			<element>
				<EnumerationLiteral name="FunctionalInterface" uuid="Root.Java Profile.AnnotationPresets.FunctionalInterface" visibility="public"/>
			</element>
		</left_content>
	</xml_diff>
	<xml_diff>
		<left_location>
			<parent xpath="/UModel/ModelHistory/Package/packagedElement/Profile/packagedElement/Enumeration/ownedLiteral"/>
			<position>6</position>
		</left_location>
		<right_location>
			<parent xpath="/UModel/ModelHistory/Package/packagedElement/Profile/packagedElement/Enumeration/ownedLiteral"/>
			<position>5</position>
		</right_location>
		<left_content>
			<element>
				<EnumerationLiteral name="Repeatable" uuid="Root.Java Profile.AnnotationPresets.Repeatable" visibility="public"/>
			</element>
		</left_content>
	</xml_diff>
	<xml_diff>
		<left_location>
			<parent xpath="/UModel/ModelHistory/Package/packagedElement/Profile/packagedElement"/>
			<position>20</position>
		</left_location>
		<right_location>
			<parent xpath="/UModel/ModelHistory/Package/packagedElement/Profile/packagedElement"/>
			<position>20</position>
		</right_location>
		<left_content>
			<element>
				<Stereotype baseClass="Operation" guiSortPriority="380" name="default" uuid="Root.Java Profile.default" visibility="public"/>
			</element>
		</left_content>
	</xml_diff>
	<xml_diff>
		<left_location>
			<parent xpath="/UModel"/>
			<position>4</position>
		</left_location>
		<right_location>
			<parent xpath="/UModel"/>
			<position>4</position>
		</right_location>
		<right_content>
			<element>
				<OpenDiagrams activeDiagram="7153ca69-6ac4-4abc-bf33-19a240e2f036">
					<OpenDiagramEntry/>
					<OpenDiagramEntry/>
					<OpenDiagramEntry/>
					<OpenDiagramEntry/>
				</OpenDiagrams>
			</element>
		</right_content>
	</xml_diff>
</diff_result>
